// <auto-generated />
using System;
using Kwaffeur.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Persistence.Migrations
{
    [DbContext(typeof(KwaffeurDbContext))]
    partial class KwaffeurDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("TEXT")
                                .HasMaxLength(200);

                            b1.Property<string>("Country")
                                .HasColumnName("Country")
                                .HasColumnType("TEXT")
                                .HasMaxLength(200);

                            b1.Property<string>("Number")
                                .HasColumnName("StreetNumber")
                                .HasColumnType("TEXT")
                                .HasMaxLength(20);

                            b1.Property<string>("State")
                                .HasColumnName("State")
                                .HasColumnType("TEXT")
                                .HasMaxLength(100);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("TEXT")
                                .HasMaxLength(200);

                            b1.Property<string>("ZipCode")
                                .HasColumnName("Zip")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("Domain.ValueObjects.ContactData", "ContactData", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Email")
                                .HasColumnName("Email")
                                .HasColumnType("TEXT")
                                .HasMaxLength(200);

                            b1.Property<string>("Fax")
                                .HasColumnName("Fax")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("Mobile")
                                .HasColumnName("Mobile")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("Phone")
                                .HasColumnName("Phone")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("VatNumber")
                                .HasColumnName("VatNumber")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("Domain.ValueObjects.Person", "Person", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasColumnType("TEXT")
                                .HasMaxLength(150);

                            b1.Property<int>("GenderType")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("GenderType")
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(77);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasColumnType("TEXT")
                                .HasMaxLength(150);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
